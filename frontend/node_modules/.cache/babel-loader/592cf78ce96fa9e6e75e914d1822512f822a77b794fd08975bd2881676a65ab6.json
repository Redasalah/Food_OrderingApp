{"ast":null,"code":"// src/api/orderApi.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data;\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return {\n    success: false,\n    error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || `Failed to ${context}. Please try again.`\n  };\n};\nconst orderApi = {\n  // Create a new order\n  createOrder: async orderData => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'create order');\n    }\n  },\n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? {\n          status\n        } : {}\n      };\n      const response = await axios.get(API_URL, config);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  // New method to get restaurant's orders\n  getRestaurantOrders: async (restaurantId, status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: {\n          restaurantId,\n          ...(status ? {\n            status\n          } : {})\n        }\n      };\n      const response = await axios.get(`${API_URL}/restaurant`, config);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch restaurant orders');\n    }\n  },\n  // Get a specific order by ID\n  getOrderById: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  // Update order status (for both restaurant and customer)\n  updateOrderStatus: async (orderId, newStatus) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/${orderId}/status`, {\n        status: newStatus\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'update order status');\n    }\n  },\n  // Cancel an order\n  cancelOrder: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  },\n  // Add a method to add special instructions to an existing order\n  addSpecialInstructions: async (orderId, instructions) => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/${orderId}/instructions`, {\n        specialInstructions: instructions\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'add special instructions');\n    }\n  }\n};\nexport default orderApi;","map":{"version":3,"names":["axios","API_URL","handleApiError","error","context","_error$response","_error$response2","_error$response3","_error$response3$data","console","message","status","response","data","success","orderApi","createOrder","orderData","token","localStorage","getItem","post","headers","getUserOrders","config","params","get","getRestaurantOrders","restaurantId","getOrderById","orderId","updateOrderStatus","newStatus","put","cancelOrder","addSpecialInstructions","instructions","specialInstructions"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/api/orderApi.js"],"sourcesContent":["// src/api/orderApi.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: error.response?.status,\n    data: error.response?.data,\n  });\n\n  return { \n    success: false, \n    error: error.response?.data?.message || `Failed to ${context}. Please try again.`\n  };\n};\n\nconst orderApi = {\n  // Create a new order\n  createOrder: async (orderData) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'create order');\n    }\n  },\n  \n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? { status } : {}\n      };\n      \n      const response = await axios.get(API_URL, config);\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  \n  // New method to get restaurant's orders\n  getRestaurantOrders: async (restaurantId, status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: {\n          restaurantId,\n          ...(status ? { status } : {})\n        }\n      };\n      \n      const response = await axios.get(`${API_URL}/restaurant`, config);\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch restaurant orders');\n    }\n  },\n  \n  // Get a specific order by ID\n  getOrderById: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  \n  // Update order status (for both restaurant and customer)\n  updateOrderStatus: async (orderId, newStatus) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(`${API_URL}/${orderId}/status`, \n        { status: newStatus },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'update order status');\n    }\n  },\n  \n  // Cancel an order\n  cancelOrder: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  },\n\n  // Add a method to add special instructions to an existing order\n  addSpecialInstructions: async (orderId, instructions) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(`${API_URL}/${orderId}/instructions`, \n        { specialInstructions: instructions },\n        {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        }\n      );\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'add special instructions');\n    }\n  }\n};\n\nexport default orderApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}