{"ast":null,"code":"var _jsxFileName = \"/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/pages/delivery/AvailableOrders.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableOrders = () => {\n  _s();\n  const {\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [availableOrders, setAvailableOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const wsRef = useRef(null);\n  const retryQueueRef = useRef([]);\n\n  // Initialize WebSocket connection for real-time updates\n  useEffect(() => {\n    if (!currentUser || !currentUser.token) return;\n\n    // Close any existing connection\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n\n    // Create new WebSocket connection\n    const wsUrl = `${process.env.REACT_APP_WS_URL || 'wss://api.yourbackend.com'}/orders`;\n    wsRef.current = new WebSocket(wsUrl);\n    wsRef.current.onopen = () => {\n      console.log('WebSocket connection established');\n      // Identify as a delivery person\n      wsRef.current.send(JSON.stringify({\n        type: 'IDENTIFY',\n        role: 'DELIVERY',\n        deliveryPersonId: currentUser.id\n      }));\n\n      // Retry any failed operations when connection is available\n      if (retryQueueRef.current.length > 0) {\n        retryFailedOperations();\n      }\n    };\n    wsRef.current.onmessage = event => {\n      const data = JSON.parse(event.data);\n      if (data.type === 'NEW_AVAILABLE_ORDER') {\n        // Handle new order available for delivery\n        showNotification('New order available for delivery!');\n        fetchAvailableOrders();\n      } else if (data.type === 'ORDER_ASSIGNED') {\n        // Handle order assigned to this delivery person\n        if (data.deliveryPersonId === currentUser.id) {\n          showNotification(`Order #${data.orderId} has been assigned to you.`);\n          // Redirect to delivery order page\n          navigate(`/delivery/order/${data.orderId}`);\n        }\n      } else if (data.type === 'ORDER_UPDATE') {\n        // General order updates\n        if (data.status === 'READY_FOR_PICKUP') {\n          showNotification('New order ready for pickup!');\n          fetchAvailableOrders();\n        }\n      }\n    };\n    wsRef.current.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    wsRef.current.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [currentUser, navigate]);\n\n  // Function to show notification\n  const showNotification = message => {\n    setNotification(message);\n    // Clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  // Store failed operations for retry\n  const storeFailedOperation = (type, data) => {\n    const newOperation = {\n      id: Date.now(),\n      type,\n      data,\n      timestamp: new Date()\n    };\n    retryQueueRef.current = [...retryQueueRef.current, newOperation];\n\n    // Store in localStorage for persistence\n    try {\n      localStorage.setItem('deliveryFailedOperations', JSON.stringify(retryQueueRef.current));\n    } catch (err) {\n      console.error('Error storing failed operation:', err);\n    }\n  };\n\n  // Remove operation from retry queue\n  const removeFailedOperation = operationId => {\n    retryQueueRef.current = retryQueueRef.current.filter(op => op.id !== operationId);\n\n    // Update localStorage\n    try {\n      localStorage.setItem('deliveryFailedOperations', JSON.stringify(retryQueueRef.current));\n    } catch (err) {\n      console.error('Error updating failed operations in storage:', err);\n    }\n  };\n\n  // Retry failed operations\n  const retryFailedOperations = async () => {\n    const operations = [...retryQueueRef.current];\n    for (const op of operations) {\n      try {\n        if (op.type === 'acceptOrder') {\n          await acceptOrderWithRetry(op.data.orderId, 1);\n          removeFailedOperation(op.id);\n        }\n        // Add other operation types here\n      } catch (err) {\n        console.error('Failed to retry operation:', err);\n        // Keep in queue for later retry\n      }\n    }\n  };\n\n  // Load any failed operations from localStorage on component mount\n  useEffect(() => {\n    try {\n      const storedOperations = localStorage.getItem('deliveryFailedOperations');\n      if (storedOperations) {\n        retryQueueRef.current = JSON.parse(storedOperations);\n      }\n    } catch (err) {\n      console.error('Error loading failed operations:', err);\n    }\n  }, []);\n\n  // Enhanced function to fetch available orders with error handling\n  const fetchAvailableOrders = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      const response = await axios.get('/api/delivery/available-orders', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setAvailableOrders(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch available orders. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching available orders:', err);\n    }\n  };\n\n  // Set up initial data fetch and polling as fallback\n  useEffect(() => {\n    fetchAvailableOrders();\n\n    // Set up polling as fallback to WebSockets\n    // This ensures we still get updates if WebSockets fail\n    const interval = setInterval(fetchAvailableOrders, 30000);\n    return () => clearInterval(interval);\n  }, [currentUser]);\n\n  // Enhanced accept order with retry logic\n  const acceptOrderWithRetry = async (orderId, maxRetries = 3) => {\n    let retries = 0;\n    while (retries < maxRetries) {\n      try {\n        console.log(`Accepting order ${orderId} (attempt ${retries + 1}/${maxRetries})`);\n        const response = await axios.post(`/api/delivery/orders/${orderId}/accept`, {}, {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n\n        // After successful acceptance, send confirmation via WebSocket\n        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n          wsRef.current.send(JSON.stringify({\n            type: 'ORDER_ACCEPTED',\n            orderId,\n            deliveryPersonId: currentUser.id\n          }));\n        }\n\n        // Generate a unique pickup code\n        const pickupCode = Math.floor(1000 + Math.random() * 9000);\n\n        // Store pickup code for verification at restaurant\n        await axios.post(`/api/delivery/orders/${orderId}/pickup-code`, {\n          pickupCode\n        }, {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n        showNotification(`Order #${orderId} accepted successfully. Your pickup code is ${pickupCode}`);\n\n        // Redirect to the delivery order page\n        navigate(`/delivery/order/${orderId}`);\n        return response;\n      } catch (err) {\n        retries++;\n        console.error(`Error accepting order (attempt ${retries}/${maxRetries}):`, err);\n        if (retries >= maxRetries) {\n          // After all retries, store failed operation for later retry\n          storeFailedOperation('acceptOrder', {\n            orderId\n          });\n          setError(`Failed to accept order. It will be retried automatically when connection is restored.`);\n          throw err;\n        }\n\n        // Wait before retrying (exponential backoff)\n        await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, retries)));\n      }\n    }\n  };\n  const handleAcceptOrder = async orderId => {\n    try {\n      await acceptOrderWithRetry(orderId);\n    } catch (err) {\n      setError('Failed to accept order. Please try again.');\n      console.error('Error accepting order:', err);\n    }\n  };\n\n  // Format distance for display\n  const formatDistance = distance => {\n    if (distance < 1) {\n      return `${Math.round(distance * 1000)} m`;\n    }\n    return `${distance.toFixed(1)} km`;\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center p-10\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner-border\",\n      role: \"status\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"sr-only\",\n        children: \"Loading available orders...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"mt-2\",\n      children: \"Loading available orders...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 m-4\",\n    role: \"alert\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => fetchAvailableOrders(),\n      className: \"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\",\n      children: \"Try Again\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 270,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto px-4 py-8\",\n    children: [notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 mb-4 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: notification\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setNotification(null),\n        className: \"text-blue-700\",\n        children: \"\\u2715\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold mb-6\",\n      children: \"Available Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), availableOrders.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center p-10 bg-gray-50 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"No orders available for delivery at this time.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-500 mt-2\",\n        children: \"Check back soon or refresh the page.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchAvailableOrders(),\n        className: \"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n        children: \"Refresh\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\",\n      children: availableOrders.map(order => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-lg shadow-md p-6 border border-gray-200\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-start mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-lg font-semibold\",\n            children: [\"Order #\", order.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"px-2 py-1 rounded-full text-xs font-semibold bg-green-100 text-green-800\",\n            children: \"Ready for pickup\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Restaurant:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: order.restaurant.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: order.restaurant.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-1\",\n            children: [\"Distance: \", formatDistance(order.restaurantDistance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Delivery to:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: order.deliveryAddress.street\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500\",\n            children: [order.deliveryAddress.city, \", \", order.deliveryAddress.zipCode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-500 mt-1\",\n            children: [\"Distance from restaurant: \", formatDistance(order.deliveryDistance)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-medium mb-2\",\n            children: \"Order summary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: [order.itemCount, \" items\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm font-medium mt-1\",\n            children: [\"Estimated delivery time: \", order.estimatedDeliveryTime, \" min\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: \"Delivery fee:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-bold\",\n            children: [\"$\", order.deliveryFee.toFixed(2)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAcceptOrder(order.id),\n          className: \"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\",\n          children: \"Accept Delivery\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 15\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 5\n  }, this);\n};\n_s(AvailableOrders, \"165tz0slfrv1LoCVxG0DCDAK3BI=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AvailableOrders;\nexport default AvailableOrders;\nvar _c;\n$RefreshReg$(_c, \"AvailableOrders\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Link","useNavigate","useAuth","jsxDEV","_jsxDEV","AvailableOrders","_s","currentUser","navigate","availableOrders","setAvailableOrders","loading","setLoading","error","setError","notification","setNotification","wsRef","retryQueueRef","token","current","close","wsUrl","process","env","REACT_APP_WS_URL","WebSocket","onopen","console","log","send","JSON","stringify","type","role","deliveryPersonId","id","length","retryFailedOperations","onmessage","event","data","parse","showNotification","fetchAvailableOrders","orderId","status","onerror","onclose","message","setTimeout","storeFailedOperation","newOperation","Date","now","timestamp","localStorage","setItem","err","removeFailedOperation","operationId","filter","op","operations","acceptOrderWithRetry","storedOperations","getItem","response","get","headers","Authorization","interval","setInterval","clearInterval","maxRetries","retries","post","readyState","OPEN","pickupCode","Math","floor","random","Promise","resolve","pow","handleAcceptOrder","formatDistance","distance","round","toFixed","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","order","restaurant","name","address","restaurantDistance","deliveryAddress","street","city","zipCode","deliveryDistance","itemCount","estimatedDeliveryTime","deliveryFee","_c","$RefreshReg$"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/pages/delivery/AvailableOrders.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n\nconst AvailableOrders = () => {\n  const { currentUser } = useAuth();\n  const navigate = useNavigate();\n  const [availableOrders, setAvailableOrders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [notification, setNotification] = useState(null);\n  const wsRef = useRef(null);\n  const retryQueueRef = useRef([]);\n  \n  // Initialize WebSocket connection for real-time updates\n  useEffect(() => {\n    if (!currentUser || !currentUser.token) return;\n    \n    // Close any existing connection\n    if (wsRef.current) {\n      wsRef.current.close();\n    }\n    \n    // Create new WebSocket connection\n    const wsUrl = `${process.env.REACT_APP_WS_URL || 'wss://api.yourbackend.com'}/orders`;\n    wsRef.current = new WebSocket(wsUrl);\n    \n    wsRef.current.onopen = () => {\n      console.log('WebSocket connection established');\n      // Identify as a delivery person\n      wsRef.current.send(JSON.stringify({\n        type: 'IDENTIFY',\n        role: 'DELIVERY',\n        deliveryPersonId: currentUser.id\n      }));\n      \n      // Retry any failed operations when connection is available\n      if (retryQueueRef.current.length > 0) {\n        retryFailedOperations();\n      }\n    };\n    \n    wsRef.current.onmessage = (event) => {\n      const data = JSON.parse(event.data);\n      \n      if (data.type === 'NEW_AVAILABLE_ORDER') {\n        // Handle new order available for delivery\n        showNotification('New order available for delivery!');\n        fetchAvailableOrders();\n      } else if (data.type === 'ORDER_ASSIGNED') {\n        // Handle order assigned to this delivery person\n        if (data.deliveryPersonId === currentUser.id) {\n          showNotification(`Order #${data.orderId} has been assigned to you.`);\n          // Redirect to delivery order page\n          navigate(`/delivery/order/${data.orderId}`);\n        }\n      } else if (data.type === 'ORDER_UPDATE') {\n        // General order updates\n        if (data.status === 'READY_FOR_PICKUP') {\n          showNotification('New order ready for pickup!');\n          fetchAvailableOrders();\n        }\n      }\n    };\n    \n    wsRef.current.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n    \n    wsRef.current.onclose = () => {\n      console.log('WebSocket connection closed');\n    };\n    \n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [currentUser, navigate]);\n\n  // Function to show notification\n  const showNotification = (message) => {\n    setNotification(message);\n    // Clear notification after 5 seconds\n    setTimeout(() => {\n      setNotification(null);\n    }, 5000);\n  };\n\n  // Store failed operations for retry\n  const storeFailedOperation = (type, data) => {\n    const newOperation = {\n      id: Date.now(),\n      type,\n      data,\n      timestamp: new Date()\n    };\n    \n    retryQueueRef.current = [...retryQueueRef.current, newOperation];\n    \n    // Store in localStorage for persistence\n    try {\n      localStorage.setItem('deliveryFailedOperations', JSON.stringify(retryQueueRef.current));\n    } catch (err) {\n      console.error('Error storing failed operation:', err);\n    }\n  };\n\n  // Remove operation from retry queue\n  const removeFailedOperation = (operationId) => {\n    retryQueueRef.current = retryQueueRef.current.filter(op => op.id !== operationId);\n    \n    // Update localStorage\n    try {\n      localStorage.setItem('deliveryFailedOperations', JSON.stringify(retryQueueRef.current));\n    } catch (err) {\n      console.error('Error updating failed operations in storage:', err);\n    }\n  };\n\n  // Retry failed operations\n  const retryFailedOperations = async () => {\n    const operations = [...retryQueueRef.current];\n    \n    for (const op of operations) {\n      try {\n        if (op.type === 'acceptOrder') {\n          await acceptOrderWithRetry(op.data.orderId, 1);\n          removeFailedOperation(op.id);\n        }\n        // Add other operation types here\n      } catch (err) {\n        console.error('Failed to retry operation:', err);\n        // Keep in queue for later retry\n      }\n    }\n  };\n\n  // Load any failed operations from localStorage on component mount\n  useEffect(() => {\n    try {\n      const storedOperations = localStorage.getItem('deliveryFailedOperations');\n      if (storedOperations) {\n        retryQueueRef.current = JSON.parse(storedOperations);\n      }\n    } catch (err) {\n      console.error('Error loading failed operations:', err);\n    }\n  }, []);\n\n  // Enhanced function to fetch available orders with error handling\n  const fetchAvailableOrders = async () => {\n    try {\n      setLoading(true);\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.get('/api/delivery/available-orders', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      \n      setAvailableOrders(response.data);\n      setLoading(false);\n    } catch (err) {\n      setError('Failed to fetch available orders. Please try again later.');\n      setLoading(false);\n      console.error('Error fetching available orders:', err);\n    }\n  };\n\n  // Set up initial data fetch and polling as fallback\n  useEffect(() => {\n    fetchAvailableOrders();\n    \n    // Set up polling as fallback to WebSockets\n    // This ensures we still get updates if WebSockets fail\n    const interval = setInterval(fetchAvailableOrders, 30000);\n    \n    return () => clearInterval(interval);\n  }, [currentUser]);\n\n  // Enhanced accept order with retry logic\n  const acceptOrderWithRetry = async (orderId, maxRetries = 3) => {\n    let retries = 0;\n    \n    while (retries < maxRetries) {\n      try {\n        console.log(`Accepting order ${orderId} (attempt ${retries + 1}/${maxRetries})`);\n        \n        const response = await axios.post(`/api/delivery/orders/${orderId}/accept`, {}, {\n          headers: {\n            Authorization: `Bearer ${currentUser.token}`\n          }\n        });\n        \n        // After successful acceptance, send confirmation via WebSocket\n        if (wsRef.current && wsRef.current.readyState === WebSocket.OPEN) {\n          wsRef.current.send(JSON.stringify({\n            type: 'ORDER_ACCEPTED',\n            orderId,\n            deliveryPersonId: currentUser.id\n          }));\n        }\n        \n        // Generate a unique pickup code\n        const pickupCode = Math.floor(1000 + Math.random() * 9000);\n        \n        // Store pickup code for verification at restaurant\n        await axios.post(`/api/delivery/orders/${orderId}/pickup-code`, \n          { pickupCode },\n          {\n            headers: {\n              Authorization: `Bearer ${currentUser.token}`\n            }\n          }\n        );\n        \n        showNotification(`Order #${orderId} accepted successfully. Your pickup code is ${pickupCode}`);\n        \n        // Redirect to the delivery order page\n        navigate(`/delivery/order/${orderId}`);\n        \n        return response;\n      } catch (err) {\n        retries++;\n        console.error(`Error accepting order (attempt ${retries}/${maxRetries}):`, err);\n        \n        if (retries >= maxRetries) {\n          // After all retries, store failed operation for later retry\n          storeFailedOperation('acceptOrder', { orderId });\n          setError(`Failed to accept order. It will be retried automatically when connection is restored.`);\n          throw err;\n        }\n        \n        // Wait before retrying (exponential backoff)\n        await new Promise(resolve => setTimeout(resolve, 1000 * Math.pow(2, retries)));\n      }\n    }\n  };\n\n  const handleAcceptOrder = async (orderId) => {\n    try {\n      await acceptOrderWithRetry(orderId);\n    } catch (err) {\n      setError('Failed to accept order. Please try again.');\n      console.error('Error accepting order:', err);\n    }\n  };\n\n  // Format distance for display\n  const formatDistance = (distance) => {\n    if (distance < 1) {\n      return `${Math.round(distance * 1000)} m`;\n    }\n    return `${distance.toFixed(1)} km`;\n  };\n\n  if (loading) return (\n    <div className=\"text-center p-10\">\n      <div className=\"spinner-border\" role=\"status\">\n        <span className=\"sr-only\">Loading available orders...</span>\n      </div>\n      <p className=\"mt-2\">Loading available orders...</p>\n    </div>\n  );\n  \n  if (error) return (\n    <div className=\"bg-red-100 border-l-4 border-red-500 text-red-700 p-4 m-4\" role=\"alert\">\n      <p>{error}</p>\n      <button \n        onClick={() => fetchAvailableOrders()}\n        className=\"mt-2 px-4 py-2 bg-red-500 text-white rounded hover:bg-red-600\"\n      >\n        Try Again\n      </button>\n    </div>\n  );\n\n  return (\n    <div className=\"container mx-auto px-4 py-8\">\n      {/* Notification Banner */}\n      {notification && (\n        <div className=\"bg-blue-100 border-l-4 border-blue-500 text-blue-700 p-4 mb-4 flex justify-between items-center\">\n          <p>{notification}</p>\n          <button onClick={() => setNotification(null)} className=\"text-blue-700\">✕</button>\n        </div>\n      )}\n      \n      <h1 className=\"text-2xl font-bold mb-6\">Available Orders</h1>\n      \n      {availableOrders.length === 0 ? (\n        <div className=\"text-center p-10 bg-gray-50 rounded-lg\">\n          <p className=\"text-gray-600\">No orders available for delivery at this time.</p>\n          <p className=\"text-gray-500 mt-2\">Check back soon or refresh the page.</p>\n          <button \n            onClick={() => fetchAvailableOrders()} \n            className=\"mt-4 px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n          >\n            Refresh\n          </button>\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3\">\n          {availableOrders.map((order) => (\n            <div key={order.id} className=\"bg-white rounded-lg shadow-md p-6 border border-gray-200\">\n              <div className=\"flex justify-between items-start mb-4\">\n                <h2 className=\"text-lg font-semibold\">Order #{order.id}</h2>\n                <span className=\"px-2 py-1 rounded-full text-xs font-semibold bg-green-100 text-green-800\">\n                  Ready for pickup\n                </span>\n              </div>\n              \n              <div className=\"mb-4\">\n                <h3 className=\"font-medium mb-2\">Restaurant:</h3>\n                <p className=\"text-sm\">{order.restaurant.name}</p>\n                <p className=\"text-sm text-gray-500\">{order.restaurant.address}</p>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  Distance: {formatDistance(order.restaurantDistance)}\n                </p>\n              </div>\n              \n              <div className=\"mb-4\">\n                <h3 className=\"font-medium mb-2\">Delivery to:</h3>\n                <p className=\"text-sm\">{order.deliveryAddress.street}</p>\n                <p className=\"text-sm text-gray-500\">\n                  {order.deliveryAddress.city}, {order.deliveryAddress.zipCode}\n                </p>\n                <p className=\"text-sm text-gray-500 mt-1\">\n                  Distance from restaurant: {formatDistance(order.deliveryDistance)}\n                </p>\n              </div>\n              \n              <div className=\"mb-4\">\n                <h3 className=\"font-medium mb-2\">Order summary:</h3>\n                <p className=\"text-sm\">{order.itemCount} items</p>\n                <p className=\"text-sm font-medium mt-1\">Estimated delivery time: {order.estimatedDeliveryTime} min</p>\n              </div>\n              \n              <div className=\"flex justify-between items-center mb-4\">\n                <span className=\"font-medium\">Delivery fee:</span>\n                <span className=\"font-bold\">${order.deliveryFee.toFixed(2)}</span>\n              </div>\n              \n              <button\n                onClick={() => handleAcceptOrder(order.id)}\n                className=\"w-full px-4 py-2 bg-blue-500 text-white rounded hover:bg-blue-600\"\n              >\n                Accept Delivery\n              </button>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default AvailableOrders;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}