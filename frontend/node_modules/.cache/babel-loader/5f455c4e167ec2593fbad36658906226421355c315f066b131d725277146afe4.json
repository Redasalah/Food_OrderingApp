{"ast":null,"code":"var _jsxFileName = \"/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/context/CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/context/CartContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create the Cart Context\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\n\n// Custom hook to use the Cart Context\nexport function useCart() {\n  _s();\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n\n// Cart Provider Component\n_s(useCart, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [items, setItems] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n\n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      const parsedCart = JSON.parse(savedCart);\n      setItems(parsedCart);\n    }\n  }, []);\n\n  // Update localStorage and calculate totals whenever cart changes\n  useEffect(() => {\n    // Update localStorage\n    localStorage.setItem('cart', JSON.stringify(items));\n\n    // Calculate total items and price\n    let itemCount = 0;\n    let price = 0;\n    items.forEach(item => {\n      itemCount += item.quantity;\n      price += item.price * item.quantity;\n    });\n    setTotalItems(itemCount);\n    setSubtotal(price);\n  }, [items]);\n\n  // Add item to cart\n  const addItem = item => {\n    setItems(prevItems => {\n      // Check if item already exists in cart\n      const existingItemIndex = prevItems.findIndex(cartItem => {\n        var _cartItem$restaurantI, _item$restaurantInfo;\n        return cartItem.id === item.id && ((_cartItem$restaurantI = cartItem.restaurantInfo) === null || _cartItem$restaurantI === void 0 ? void 0 : _cartItem$restaurantI.id) === ((_item$restaurantInfo = item.restaurantInfo) === null || _item$restaurantInfo === void 0 ? void 0 : _item$restaurantInfo.id);\n      });\n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        return updatedItems;\n      } else {\n        // Item doesn't exist, add new item\n        return [...prevItems, {\n          ...item,\n          quantity: 1\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeItem = itemId => {\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n\n  // Update item quantity\n  const updateQuantity = (itemId, quantity) => {\n    if (quantity <= 0) {\n      removeItem(itemId);\n      return;\n    }\n    setItems(prevItems => prevItems.map(item => item.id === itemId ? {\n      ...item,\n      quantity\n    } : item));\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setItems([]);\n  };\n\n  // Check if cart contains items from multiple restaurants\n  const hasMultipleRestaurants = () => {\n    const restaurantIds = new Set(items.map(item => {\n      var _item$restaurantInfo2;\n      return (_item$restaurantInfo2 = item.restaurantInfo) === null || _item$restaurantInfo2 === void 0 ? void 0 : _item$restaurantInfo2.id;\n    }).filter(Boolean));\n    return restaurantIds.size > 1;\n  };\n\n  // Get the restaurant ID if all items are from one restaurant\n  const getSingleRestaurantId = () => {\n    var _items$0$restaurantIn;\n    if (hasMultipleRestaurants() || items.length === 0) {\n      return null;\n    }\n    return (_items$0$restaurantIn = items[0].restaurantInfo) === null || _items$0$restaurantIn === void 0 ? void 0 : _items$0$restaurantIn.id;\n  };\n\n  // Create the context value\n  const value = {\n    items,\n    totalItems,\n    subtotal,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    hasMultipleRestaurants,\n    getSingleRestaurantId\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s2(CartProvider, \"pmDMu0ucAtaczIfA7u27MGADhkw=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","jsxDEV","_jsxDEV","CartContext","useCart","_s","context","Error","CartProvider","children","_s2","items","setItems","totalItems","setTotalItems","subtotal","setSubtotal","savedCart","localStorage","getItem","parsedCart","JSON","parse","setItem","stringify","itemCount","price","forEach","item","quantity","addItem","prevItems","existingItemIndex","findIndex","cartItem","_cartItem$restaurantI","_item$restaurantInfo","id","restaurantInfo","updatedItems","removeItem","itemId","filter","updateQuantity","map","clearCart","hasMultipleRestaurants","restaurantIds","Set","_item$restaurantInfo2","Boolean","size","getSingleRestaurantId","_items$0$restaurantIn","length","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/context/CartContext.js"],"sourcesContent":["// src/context/CartContext.js\nimport React, { createContext, useState, useContext, useEffect } from 'react';\n\n// Create the Cart Context\nconst CartContext = createContext();\n\n// Custom hook to use the Cart Context\nexport function useCart() {\n  const context = useContext(CartContext);\n  if (!context) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n}\n\n// Cart Provider Component\nexport function CartProvider({ children }) {\n  const [items, setItems] = useState([]);\n  const [totalItems, setTotalItems] = useState(0);\n  const [subtotal, setSubtotal] = useState(0);\n  \n  // Load cart from localStorage on component mount\n  useEffect(() => {\n    const savedCart = localStorage.getItem('cart');\n    if (savedCart) {\n      const parsedCart = JSON.parse(savedCart);\n      setItems(parsedCart);\n    }\n  }, []);\n  \n  // Update localStorage and calculate totals whenever cart changes\n  useEffect(() => {\n    // Update localStorage\n    localStorage.setItem('cart', JSON.stringify(items));\n    \n    // Calculate total items and price\n    let itemCount = 0;\n    let price = 0;\n    \n    items.forEach(item => {\n      itemCount += item.quantity;\n      price += item.price * item.quantity;\n    });\n    \n    setTotalItems(itemCount);\n    setSubtotal(price);\n  }, [items]);\n  \n  // Add item to cart\n  const addItem = (item) => {\n    setItems(prevItems => {\n      // Check if item already exists in cart\n      const existingItemIndex = prevItems.findIndex(\n        cartItem => cartItem.id === item.id && \n        cartItem.restaurantInfo?.id === item.restaurantInfo?.id\n      );\n      \n      if (existingItemIndex >= 0) {\n        // Item exists, update quantity\n        const updatedItems = [...prevItems];\n        updatedItems[existingItemIndex] = {\n          ...updatedItems[existingItemIndex],\n          quantity: updatedItems[existingItemIndex].quantity + 1\n        };\n        return updatedItems;\n      } else {\n        // Item doesn't exist, add new item\n        return [...prevItems, { ...item, quantity: 1 }];\n      }\n    });\n  };\n  \n  // Remove item from cart\n  const removeItem = (itemId) => {\n    setItems(prevItems => prevItems.filter(item => item.id !== itemId));\n  };\n  \n  // Update item quantity\n  const updateQuantity = (itemId, quantity) => {\n    if (quantity <= 0) {\n      removeItem(itemId);\n      return;\n    }\n    \n    setItems(prevItems => \n      prevItems.map(item => \n        item.id === itemId ? { ...item, quantity } : item\n      )\n    );\n  };\n  \n  // Clear cart\n  const clearCart = () => {\n    setItems([]);\n  };\n  \n  // Check if cart contains items from multiple restaurants\n  const hasMultipleRestaurants = () => {\n    const restaurantIds = new Set(items.map(item => item.restaurantInfo?.id).filter(Boolean));\n    return restaurantIds.size > 1;\n  };\n  \n  // Get the restaurant ID if all items are from one restaurant\n  const getSingleRestaurantId = () => {\n    if (hasMultipleRestaurants() || items.length === 0) {\n      return null;\n    }\n    return items[0].restaurantInfo?.id;\n  };\n  \n  // Create the context value\n  const value = {\n    items,\n    totalItems,\n    subtotal,\n    addItem,\n    removeItem,\n    updateQuantity,\n    clearCart,\n    hasMultipleRestaurants,\n    getSingleRestaurantId\n  };\n  \n  return (\n    <CartContext.Provider value={value}>\n      {children}\n    </CartContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}