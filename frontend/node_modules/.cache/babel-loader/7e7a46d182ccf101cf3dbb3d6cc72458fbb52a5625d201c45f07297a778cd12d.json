{"ast":null,"code":"// src/api/orderApi.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Order status mapping for consistent frontend representation\nexport const ORDER_STATUS_MAP = {\n  PENDING: {\n    label: 'Order Received',\n    description: 'Your order has been placed and is being processed',\n    color: 'text-info'\n  },\n  PROCESSING: {\n    label: 'Preparing',\n    description: 'Restaurant is preparing your order',\n    color: 'text-warning'\n  },\n  READY_FOR_PICKUP: {\n    label: 'Ready for Pickup',\n    description: 'Your order is ready to be picked up or delivered',\n    color: 'text-success'\n  },\n  OUT_FOR_DELIVERY: {\n    label: 'Out for Delivery',\n    description: 'Your order is on its way',\n    color: 'text-primary'\n  },\n  COMPLETED: {\n    label: 'Delivered',\n    description: 'Order has been successfully delivered',\n    color: 'text-success'\n  },\n  CANCELLED: {\n    label: 'Cancelled',\n    description: 'Order was cancelled',\n    color: 'text-danger'\n  }\n};\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data, _error$response4;\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return {\n    success: false,\n    error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || `Failed to ${context}. Please try again.`,\n    details: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data\n  };\n};\nconst orderApi = {\n  // Create a new order\n  createOrder: async orderData => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Enhanced logging and validation\n      console.log('Order Creation Request:', orderData);\n\n      // Comprehensive data validation\n      if (!orderData.restaurantId) {\n        throw new Error('Restaurant ID is required');\n      }\n      if (!orderData.orderItems || orderData.orderItems.length === 0) {\n        throw new Error('At least one order item is required');\n      }\n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Order Creation Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7, _error$response7$data, _error$response8;\n      console.error('Order Creation Full Error:', {\n        message: error.message,\n        response: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.data,\n        status: (_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status\n      });\n      return {\n        success: false,\n        error: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to create order. Please try again.',\n        details: (_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : _error$response8.data\n      };\n    }\n  },\n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? {\n          status\n        } : {}\n      };\n      const response = await axios.get(API_URL, config);\n\n      // Sort orders by most recent first\n      const sortedOrders = response.data.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n      return {\n        success: true,\n        data: sortedOrders\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  // Get a specific order by ID\n  getOrderById: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  // Cancel an order\n  cancelOrder: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  },\n  // Get order status information\n  getOrderStatusInfo: status => {\n    return ORDER_STATUS_MAP[status] || {\n      label: 'Unknown Status',\n      description: 'Status not recognized',\n      color: 'text-secondary'\n    };\n  }\n};\nexport default orderApi;","map":{"version":3,"names":["axios","API_URL","ORDER_STATUS_MAP","PENDING","label","description","color","PROCESSING","READY_FOR_PICKUP","OUT_FOR_DELIVERY","COMPLETED","CANCELLED","handleApiError","error","context","_error$response","_error$response2","_error$response3","_error$response3$data","_error$response4","console","message","status","response","data","success","details","orderApi","createOrder","orderData","token","localStorage","getItem","log","restaurantId","Error","orderItems","length","post","headers","_error$response5","_error$response6","_error$response7","_error$response7$data","_error$response8","getUserOrders","config","params","get","sortedOrders","sort","a","b","Date","createdAt","getOrderById","orderId","cancelOrder","put","getOrderStatusInfo"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/api/orderApi.js"],"sourcesContent":["// src/api/orderApi.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Order status mapping for consistent frontend representation\nexport const ORDER_STATUS_MAP = {\n  PENDING: { \n    label: 'Order Received', \n    description: 'Your order has been placed and is being processed',\n    color: 'text-info'\n  },\n  PROCESSING: { \n    label: 'Preparing', \n    description: 'Restaurant is preparing your order',\n    color: 'text-warning'\n  },\n  READY_FOR_PICKUP: { \n    label: 'Ready for Pickup', \n    description: 'Your order is ready to be picked up or delivered',\n    color: 'text-success'\n  },\n  OUT_FOR_DELIVERY: { \n    label: 'Out for Delivery', \n    description: 'Your order is on its way',\n    color: 'text-primary'\n  },\n  COMPLETED: { \n    label: 'Delivered', \n    description: 'Order has been successfully delivered',\n    color: 'text-success'\n  },\n  CANCELLED: { \n    label: 'Cancelled', \n    description: 'Order was cancelled',\n    color: 'text-danger'\n  }\n};\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: error.response?.status,\n    data: error.response?.data,\n  });\n\n  return { \n    success: false, \n    error: error.response?.data?.message || `Failed to ${context}. Please try again.`,\n    details: error.response?.data\n  };\n};\n\nconst orderApi = {\n  // Create a new order\n  createOrder: async (orderData) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Enhanced logging and validation\n      console.log('Order Creation Request:', orderData);\n\n      // Comprehensive data validation\n      if (!orderData.restaurantId) {\n        throw new Error('Restaurant ID is required');\n      }\n      if (!orderData.orderItems || orderData.orderItems.length === 0) {\n        throw new Error('At least one order item is required');\n      }\n\n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Order Creation Response:', response.data);\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      console.error('Order Creation Full Error:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to create order. Please try again.',\n        details: error.response?.data\n      };\n    }\n  },\n  \n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? { status } : {}\n      };\n      \n      const response = await axios.get(API_URL, config);\n      \n      // Sort orders by most recent first\n      const sortedOrders = response.data.sort((a, b) => \n        new Date(b.createdAt) - new Date(a.createdAt)\n      );\n      \n      return { \n        success: true, \n        data: sortedOrders\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  \n  // Get a specific order by ID\n  getOrderById: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  \n  // Cancel an order\n  cancelOrder: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  },\n\n  // Get order status information\n  getOrderStatusInfo: (status) => {\n    return ORDER_STATUS_MAP[status] || {\n      label: 'Unknown Status',\n      description: 'Status not recognized',\n      color: 'text-secondary'\n    };\n  }\n};\n\nexport default orderApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}