{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/auth';\n\n// Configure axios with default options\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add logging for debugging\nconst logRequest = (context, data) => {\n  console.log(`[${context}] Request:`, data);\n};\nconst logResponse = (context, response) => {\n  console.log(`[${context}] Response:`, response);\n};\nconst logError = (context, error) => {\n  console.error(`[${context}] Error:`, error.response || error.message || error);\n};\nconst authApi = {\n  // Login user - MUST use POST method\n  login: async (email, password) => {\n    logRequest('login', {\n      email,\n      password: '******'\n    });\n    try {\n      // Explicitly use POST method\n      const response = await api.post('/auth/login', {\n        email,\n        password\n      });\n      logResponse('login', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      logError('login', error);\n      return {\n        success: false,\n        error: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to login. Please try again.'\n      };\n    }\n  },\n  // Register user - MUST use POST method\n  register: async userData => {\n    logRequest('register', {\n      ...userData,\n      password: '******'\n    });\n    try {\n      // Explicitly use POST method\n      const response = await api.post('/auth/register', userData);\n      logResponse('register', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response2, _error$response3, _error$response4, _error$response4$data;\n      logError('register', error);\n      if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 400 && (_error$response3 = error.response) !== null && _error$response3 !== void 0 && _error$response3.data) {\n        // Handle validation errors\n        if (typeof error.response.data === 'object' && !error.response.data.message) {\n          const validationErrors = error.response.data;\n          return {\n            success: false,\n            validationErrors\n          };\n        }\n      }\n      return {\n        success: false,\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to register. Please try again.'\n      };\n    }\n  },\n  // Check auth status - safely use GET method\n  checkStatus: async () => {\n    try {\n      const response = await api.get('/auth/status');\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      return {\n        success: false,\n        error: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to check auth status.'\n      };\n    }\n  }\n};\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\nexport default authApi;","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","logRequest","context","data","console","log","logResponse","response","logError","error","message","authApi","login","email","password","post","success","_error$response","_error$response$data","register","userData","_error$response2","_error$response3","_error$response4","_error$response4$data","status","validationErrors","checkStatus","get","_error$response5","_error$response5$data","interceptors","request","use","config","token","localStorage","getItem","Authorization","Promise","reject"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/api/authApi.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/auth';\n\n// Configure axios with default options\nconst api = axios.create({\n  baseURL: 'http://localhost:8080/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add logging for debugging\nconst logRequest = (context, data) => {\n  console.log(`[${context}] Request:`, data);\n};\n\nconst logResponse = (context, response) => {\n  console.log(`[${context}] Response:`, response);\n};\n\nconst logError = (context, error) => {\n  console.error(`[${context}] Error:`, error.response || error.message || error);\n};\n\nconst authApi = {\n  // Login user - MUST use POST method\n  login: async (email, password) => {\n    logRequest('login', { email, password: '******' });\n    \n    try {\n      // Explicitly use POST method\n      const response = await api.post('/auth/login', { email, password });\n      logResponse('login', response.data);\n      \n      return { success: true, data: response.data };\n    } catch (error) {\n      logError('login', error);\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to login. Please try again.' \n      };\n    }\n  },\n\n  // Register user - MUST use POST method\n  register: async (userData) => {\n    logRequest('register', { ...userData, password: '******' });\n    \n    try {\n      // Explicitly use POST method\n      const response = await api.post('/auth/register', userData);\n      logResponse('register', response.data);\n      \n      return { success: true, data: response.data };\n    } catch (error) {\n      logError('register', error);\n      \n      if (error.response?.status === 400 && error.response?.data) {\n        // Handle validation errors\n        if (typeof error.response.data === 'object' && !error.response.data.message) {\n          const validationErrors = error.response.data;\n          return { success: false, validationErrors };\n        }\n      }\n      \n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to register. Please try again.' \n      };\n    }\n  },\n  \n  // Check auth status - safely use GET method\n  checkStatus: async () => {\n    try {\n      const response = await api.get('/auth/status');\n      return { success: true, data: response.data };\n    } catch (error) {\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to check auth status.' \n      };\n    }\n  }\n};\n\n// Add request interceptor to include auth token\napi.interceptors.request.use(\n  config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  error => Promise.reject(error)\n);\n\nexport default authApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}