{"ast":null,"code":"var _jsxFileName = \"/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/components/ProtectedRoute.jsx\",\n  _s = $RefreshSig$();\n// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children,\n  requiredRole\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    loading,\n    user\n  } = useAuth();\n\n  // Show loading state while checking authentication\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Check if a specific role is required\n  if (requiredRole && user.role !== requiredRole) {\n    // Redirect to the appropriate dashboard based on user role\n    if (user.role === 'CUSTOMER') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'RESTAURANT_STAFF') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/restaurant/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 14\n      }, this);\n    } else if (user.role === 'DELIVERY_PERSONNEL') {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/delivery/dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 14\n      }, this);\n    }\n  }\n\n  // Render children if authenticated and has required role (or no specific role is required)\n  return children;\n};\n_s(ProtectedRoute, \"8HNWTDX9ZYet8YmVN2bU91bK+h8=\", false, function () {\n  return [useAuth];\n});\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","ProtectedRoute","children","requiredRole","_s","isAuthenticated","loading","user","className","fileName","_jsxFileName","lineNumber","columnNumber","to","role","_c","$RefreshReg$"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/components/ProtectedRoute.jsx"],"sourcesContent":["// src/components/ProtectedRoute.jsx\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\n\nconst ProtectedRoute = ({ children, requiredRole }) => {\n  const { isAuthenticated, loading, user } = useAuth();\n  \n  // Show loading state while checking authentication\n  if (loading) {\n    return <div className=\"loading-container\">Loading...</div>;\n  }\n  \n  // Redirect to login if not authenticated\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" />;\n  }\n  \n  // Check if a specific role is required\n  if (requiredRole && user.role !== requiredRole) {\n    // Redirect to the appropriate dashboard based on user role\n    if (user.role === 'CUSTOMER') {\n      return <Navigate to=\"/dashboard\" />;\n    } else if (user.role === 'RESTAURANT_STAFF') {\n      return <Navigate to=\"/restaurant/dashboard\" />;\n    } else if (user.role === 'DELIVERY_PERSONNEL') {\n      return <Navigate to=\"/delivery/dashboard\" />;\n    }\n  }\n  \n  // Render children if authenticated and has required role (or no specific role is required)\n  return children;\n};\n\nexport default ProtectedRoute;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,cAAc,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACrD,MAAM;IAAEC,eAAe;IAAEC,OAAO;IAAEC;EAAK,CAAC,GAAGT,OAAO,CAAC,CAAC;;EAEpD;EACA,IAAIQ,OAAO,EAAE;IACX,oBAAON,OAAA;MAAKQ,SAAS,EAAC,mBAAmB;MAAAN,QAAA,EAAC;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC5D;;EAEA;EACA,IAAI,CAACP,eAAe,EAAE;IACpB,oBAAOL,OAAA,CAACH,QAAQ;MAACgB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,IAAIT,YAAY,IAAII,IAAI,CAACO,IAAI,KAAKX,YAAY,EAAE;IAC9C;IACA,IAAII,IAAI,CAACO,IAAI,KAAK,UAAU,EAAE;MAC5B,oBAAOd,OAAA,CAACH,QAAQ;QAACgB,EAAE,EAAC;MAAY;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACrC,CAAC,MAAM,IAAIL,IAAI,CAACO,IAAI,KAAK,kBAAkB,EAAE;MAC3C,oBAAOd,OAAA,CAACH,QAAQ;QAACgB,EAAE,EAAC;MAAuB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAChD,CAAC,MAAM,IAAIL,IAAI,CAACO,IAAI,KAAK,oBAAoB,EAAE;MAC7C,oBAAOd,OAAA,CAACH,QAAQ;QAACgB,EAAE,EAAC;MAAqB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAC9C;EACF;;EAEA;EACA,OAAOV,QAAQ;AACjB,CAAC;AAACE,EAAA,CA3BIH,cAAc;EAAA,QACyBH,OAAO;AAAA;AAAAiB,EAAA,GAD9Cd,cAAc;AA6BpB,eAAeA,cAAc;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}