{"ast":null,"code":"// src/api/orderApi.js\nimport axios from 'axios';\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  var _error$response, _error$response2, _error$response3, _error$response3$data;\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status,\n    data: (_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.data\n  });\n  return {\n    success: false,\n    error: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || `Failed to ${context}. Please try again.`\n  };\n};\nconst orderApi = {\n  // Create a new order\n  createOrder: async orderData => {\n    try {\n      const token = localStorage.getItem('token');\n\n      // Log the incoming order data for debugging\n      console.log('Order Creation Request:', orderData);\n\n      // Verify the structure of the order data\n      if (!orderData.restaurantId || !orderData.orderItems) {\n        throw new Error('Invalid order data structure');\n      }\n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      console.log('Order Creation Response:', response.data);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      var _error$response4, _error$response5, _error$response6, _error$response6$data, _error$response7;\n      console.error('Order Creation Full Error:', {\n        message: error.message,\n        response: (_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.data,\n        status: (_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status\n      });\n      return {\n        success: false,\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.message) || 'Failed to create order. Please try again.',\n        details: (_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.data\n      };\n    }\n  },\n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? {\n          status\n        } : {}\n      };\n      const response = await axios.get(API_URL, config);\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  // Get a specific order by ID\n  getOrderById: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  // Cancel an order\n  cancelOrder: async orderId => {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      return {\n        success: true,\n        data: response.data\n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  }\n};\nexport default orderApi;","map":{"version":3,"names":["axios","API_URL","handleApiError","error","context","_error$response","_error$response2","_error$response3","_error$response3$data","console","message","status","response","data","success","orderApi","createOrder","orderData","token","localStorage","getItem","log","restaurantId","orderItems","Error","post","headers","_error$response4","_error$response5","_error$response6","_error$response6$data","_error$response7","details","getUserOrders","config","params","get","getOrderById","orderId","cancelOrder","put"],"sources":["/Users/akr4m/Desktop/Food_OrderingApp/frontend/src/api/orderApi.js"],"sourcesContent":["// src/api/orderApi.js\nimport axios from 'axios';\n\nconst API_URL = 'http://localhost:8080/api/orders';\n\n// Helper function to handle API errors\nconst handleApiError = (error, context) => {\n  console.error(`OrderAPI Error (${context}):`, {\n    message: error.message,\n    status: error.response?.status,\n    data: error.response?.data,\n  });\n\n  return { \n    success: false, \n    error: error.response?.data?.message || `Failed to ${context}. Please try again.`\n  };\n};\n\nconst orderApi = {\n  // Create a new order\n  createOrder: async (orderData) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      // Log the incoming order data for debugging\n      console.log('Order Creation Request:', orderData);\n\n      // Verify the structure of the order data\n      if (!orderData.restaurantId || !orderData.orderItems) {\n        throw new Error('Invalid order data structure');\n      }\n\n      const response = await axios.post(API_URL, orderData, {\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        }\n      });\n      \n      console.log('Order Creation Response:', response.data);\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      console.error('Order Creation Full Error:', {\n        message: error.message,\n        response: error.response?.data,\n        status: error.response?.status\n      });\n\n      return { \n        success: false, \n        error: error.response?.data?.message || 'Failed to create order. Please try again.',\n        details: error.response?.data\n      };\n    }\n  },\n  \n  // Get user's orders (with optional status filter)\n  getUserOrders: async (status = null) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const config = {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        },\n        params: status ? { status } : {}\n      };\n      \n      const response = await axios.get(API_URL, config);\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch orders');\n    }\n  },\n  \n  // Get a specific order by ID\n  getOrderById: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.get(`${API_URL}/${orderId}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'fetch order details');\n    }\n  },\n  \n  // Cancel an order\n  cancelOrder: async (orderId) => {\n    try {\n      const token = localStorage.getItem('token');\n      \n      const response = await axios.put(`${API_URL}/${orderId}/cancel`, null, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      \n      return { \n        success: true, \n        data: response.data \n      };\n    } catch (error) {\n      return handleApiError(error, 'cancel order');\n    }\n  }\n};\n\nexport default orderApi;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}